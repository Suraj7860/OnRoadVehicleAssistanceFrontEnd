[{"F:\\reactjs\\react-orva\\src\\index.js":"1","F:\\reactjs\\react-orva\\src\\App.js":"2","F:\\reactjs\\react-orva\\src\\serviceWorker.js":"3","F:\\reactjs\\react-orva\\src\\app\\store.js":"4","F:\\reactjs\\react-orva\\src\\features\\counter\\Counter.js":"5","F:\\reactjs\\react-orva\\src\\features\\counter\\counterSlice.js":"6","F:\\reactjs\\react-orva\\src\\components\\AdminRouter.js":"7","F:\\reactjs\\react-orva\\src\\components\\Sidebar.js":"8","F:\\reactjs\\react-orva\\src\\components\\SideBarData.js":"9","F:\\reactjs\\react-orva\\src\\components\\SubMenu.js":"10","F:\\reactjs\\react-orva\\src\\pages\\ViewUsers.js":"11","F:\\reactjs\\react-orva\\src\\actions\\actions.js":"12","F:\\reactjs\\react-orva\\src\\stores\\reducer.js":"13","F:\\reactjs\\react-orva\\src\\pages\\ViewRequest.js":"14","F:\\reactjs\\react-orva\\src\\pages\\ViewMechanic.js":"15","F:\\reactjs\\react-orva\\src\\pages\\ViewFeedback.js":"16","F:\\reactjs\\react-orva\\src\\components\\Home.js":"17","F:\\reactjs\\react-orva\\src\\components\\AdminLogin.js":"18","F:\\reactjs\\react-orva\\src\\pages\\SearchById.js":"19","F:\\reactjs\\react-orva\\src\\components\\ReactRouter.js":"20","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\index.js":"21","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\App.js":"22","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\serviceWorker.js":"23","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\stores\\reducer.js":"24","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\AdminRouter.js":"25","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\actions.js":"26","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Sidebar.js":"27","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewUsers.js":"28","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewRequest.js":"29","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewMechanic.js":"30","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\SearchById.js":"31","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewFeedback.js":"32","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\SideBarData.js":"33","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\NavbarData.js":"34","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MainLogin.js":"35","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicRouting.js":"36","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserRouting.js":"37","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Logout.js":"38","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\MechanicProfile.js":"39","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Navbar.js":"40","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\mactions.js":"41","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicSidebarData.js":"42","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\ValidateUser.js":"43","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\Profile.js":"44","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\GiveFeedback.js":"45","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\SearchMechanic.js":"46","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\useractions.js":"47","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\userNavbar.js":"48","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserSidebarData.js":"49","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicRegister.js":"50","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewMechanicRequest.js":"51","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserRegister.js":"52","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Home.js":"53","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\ReactRouter.js":"54","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\AdminLogin.js":"55"},{"size":844,"mtime":1611293197359,"results":"56","hashOfConfig":"57"},{"size":356,"mtime":1611559518089,"results":"58","hashOfConfig":"57"},{"size":5141,"mtime":499162500000,"results":"59","hashOfConfig":"57"},{"size":206,"mtime":499162500000,"results":"60","hashOfConfig":"57"},{"size":1626,"mtime":499162500000,"results":"61","hashOfConfig":"57"},{"size":1551,"mtime":499162500000,"results":"62","hashOfConfig":"57"},{"size":1150,"mtime":1611511693560,"results":"63","hashOfConfig":"57"},{"size":1841,"mtime":1611489977146,"results":"64","hashOfConfig":"57"},{"size":832,"mtime":1611432093316,"results":"65","hashOfConfig":"57"},{"size":1756,"mtime":1611263875595,"results":"66","hashOfConfig":"57"},{"size":2428,"mtime":1611290446022,"results":"67","hashOfConfig":"57"},{"size":5169,"mtime":1611507295943,"results":"68","hashOfConfig":"57"},{"size":6336,"mtime":1611513529572,"results":"69","hashOfConfig":"57"},{"size":2149,"mtime":1611333944197,"results":"70","hashOfConfig":"57"},{"size":3266,"mtime":1611430013960,"results":"71","hashOfConfig":"57"},{"size":2133,"mtime":1611499271215,"results":"72","hashOfConfig":"57"},{"size":2354,"mtime":1611503905471,"results":"73","hashOfConfig":"57"},{"size":4279,"mtime":1611514025505,"results":"74","hashOfConfig":"57"},{"size":2458,"mtime":1611507288053,"results":"75","hashOfConfig":"57"},{"size":2180,"mtime":1611560155578,"results":"76","hashOfConfig":"57"},{"size":894,"mtime":1611731415486,"results":"77","hashOfConfig":"78"},{"size":795,"mtime":1611810361506,"results":"79","hashOfConfig":"78"},{"size":5141,"mtime":499162500000,"results":"80","hashOfConfig":"78"},{"size":10369,"mtime":1611808212696,"results":"81","hashOfConfig":"78"},{"size":1710,"mtime":1611807968637,"results":"82","hashOfConfig":"78"},{"size":4883,"mtime":1611782216629,"results":"83","hashOfConfig":"78"},{"size":1623,"mtime":1611782590851,"results":"84","hashOfConfig":"78"},{"size":2487,"mtime":1611776579829,"results":"85","hashOfConfig":"78"},{"size":2282,"mtime":1611781240857,"results":"86","hashOfConfig":"78"},{"size":3337,"mtime":1611776634459,"results":"87","hashOfConfig":"78"},{"size":2510,"mtime":1611776736589,"results":"88","hashOfConfig":"78"},{"size":2164,"mtime":1611812430821,"results":"89","hashOfConfig":"78"},{"size":948,"mtime":1611783058407,"results":"90","hashOfConfig":"78"},{"size":2060,"mtime":1611808014921,"results":"91","hashOfConfig":"78"},{"size":11422,"mtime":1611810175181,"results":"92","hashOfConfig":"78"},{"size":1494,"mtime":1611741988590,"results":"93","hashOfConfig":"78"},{"size":1380,"mtime":1611729721608,"results":"94","hashOfConfig":"78"},{"size":993,"mtime":1611652798594,"results":"95","hashOfConfig":"78"},{"size":7759,"mtime":1611781139521,"results":"96","hashOfConfig":"78"},{"size":1588,"mtime":1611675384586,"results":"97","hashOfConfig":"78"},{"size":3832,"mtime":1611741844359,"results":"98","hashOfConfig":"78"},{"size":777,"mtime":1611690786806,"results":"99","hashOfConfig":"78"},{"size":2840,"mtime":1611729233313,"results":"100","hashOfConfig":"78"},{"size":6185,"mtime":1611781671581,"results":"101","hashOfConfig":"78"},{"size":2628,"mtime":1611694173666,"results":"102","hashOfConfig":"78"},{"size":4211,"mtime":1611781675451,"results":"103","hashOfConfig":"78"},{"size":4100,"mtime":1611751206038,"results":"104","hashOfConfig":"78"},{"size":1578,"mtime":1611729687433,"results":"105","hashOfConfig":"78"},{"size":771,"mtime":1611729658794,"results":"106","hashOfConfig":"78"},{"size":8517,"mtime":1611779746171,"results":"107","hashOfConfig":"78"},{"size":2245,"mtime":1611776340470,"results":"108","hashOfConfig":"78"},{"size":6492,"mtime":1611780882196,"results":"109","hashOfConfig":"78"},{"size":810,"mtime":1611730279671,"results":"110","hashOfConfig":"78"},{"size":2114,"mtime":1611807868746,"results":"111","hashOfConfig":"78"},{"size":4367,"mtime":1611650296480,"results":"112","hashOfConfig":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"1e7ldnq",{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"115"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"115"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"115"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"115"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"lfmrf4",{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"162"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"162"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"162"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"162"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"162"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"162"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"162"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"162"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"162"},{"filePath":"244","messages":"245","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"162"},"F:\\reactjs\\react-orva\\src\\index.js",[],["249","250"],"F:\\reactjs\\react-orva\\src\\App.js",["251","252"],"F:\\reactjs\\react-orva\\src\\serviceWorker.js",[],"F:\\reactjs\\react-orva\\src\\app\\store.js",[],["253","254"],"F:\\reactjs\\react-orva\\src\\features\\counter\\Counter.js",[],"F:\\reactjs\\react-orva\\src\\features\\counter\\counterSlice.js",[],"F:\\reactjs\\react-orva\\src\\components\\AdminRouter.js",["255","256"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\nimport ViewRequest from '../pages/ViewRequest';\r\nimport ViewUsers from '../pages/ViewUsers';\r\nimport ViewMechanic from '../pages/ViewMechanic';\r\nimport ViewFeedback from '../pages/ViewFeedback';\r\n import Sidebar from './Sidebar';\r\nimport SearchById from '../pages/SearchById';\r\nimport Home from './Home';\r\n\r\n\r\nexport function AdminRouter() {\r\n    return (\r\n\r\n        <Router>\r\n            \r\n             <Sidebar/>\r\n             <Switch>\r\n            <Route exact path=\"/viewUser\">\r\n                <ViewUsers  />\r\n            </Route>\r\n            <Route exact path=\"/viewRequest\">\r\n                <ViewRequest />\r\n            </Route>\r\n            <Route exact path=\"/viewMechanic\">\r\n                <ViewMechanic />\r\n            </Route>\r\n            <Route exact path=\"/viewFeedback\">\r\n                <SearchById />\r\n            </Route>\r\n            <Route exact path=\"/logout\">\r\n                <Home />\r\n            </Route>\r\n            </Switch>\r\n        </Router>\r\n         \r\n        \r\n    )\r\n}\r\n\r\nexport default AdminRouter\r\n\r\n","F:\\reactjs\\react-orva\\src\\components\\Sidebar.js",[],"F:\\reactjs\\react-orva\\src\\components\\SideBarData.js",["257","258","259"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as CgIcons from 'react-icons/cg'\r\nimport * as GiIcons from 'react-icons/gi'\r\nimport * as VscIcons from 'react-icons/vsc'\r\nimport * as RiIcons from 'react-icons/ri'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as ImIcons from 'react-icons/im'\r\n\r\nexport const SideBarData=[\r\n    {\r\n    title:'View Users',\r\n    path:'/viewUser',\r\n    icon:<CgIcons.CgUserList />\r\n},\r\n{\r\n    title:'View Mechanics',\r\n    path:'/viewMechanic',\r\n    icon:<GiIcons.GiMechanicGarage  />\r\n},\r\n{\r\n    title:'View Requests',\r\n    path:'/viewRequest',\r\n    icon:<ImIcons.ImUsers/>\r\n},\r\n{\r\n    title:'View Feedbacks',\r\n    path:'/viewFeedback',\r\n    icon:<VscIcons.VscFeedback  />,\r\n   \r\n},\r\n{\r\n    title:'Logout',\r\n    path:'/logout',\r\n    icon:<CgIcons.CgLogOff/>\r\n}\r\n];\r\n","F:\\reactjs\\react-orva\\src\\components\\SubMenu.js",[],"F:\\reactjs\\react-orva\\src\\pages\\ViewUsers.js",[],"F:\\reactjs\\react-orva\\src\\actions\\actions.js",["260","261","262","263","264","265"],"import axios from 'axios'\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS'\r\nexport const GET_ALL_SERVICES = 'GET_ALL_SERVICES'\r\nexport const GET_ALL_MECHANICS = 'GET_ALL_MECHANICS'\r\nexport const GET_ALL_RATINGS = 'GET_ALL_RATINGS'\r\nexport const GET_ALL_FEEDBACKS = 'GET_ALL_FEEDBACKS'\r\nexport const LOGIN_VERIFICATION ='LOGIN_VERIFICATION'\r\nexport const GET_FEEDBACK_BY_ID = 'GET_FEEDBACK_BY_ID'\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const DELETE_MECHANIC = 'DELETE_MECHANIC'\r\nexport const CLEAR_STATE = 'CLEAR_STATE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\nconst BASE_URL = 'http://localhost:8080/admin/'\r\nconst onLoginVerification = (data) => {\r\n    return {\r\n        type:LOGIN_VERIFICATION,\r\n        data\r\n    }\r\n}\r\n\r\nexport const onLoginVerify = (credentials) => {\r\n    \r\n    return (dispatch) => {\r\n        axios.post(BASE_URL+'login?username='+credentials.id +'&password='+credentials.password)\r\n        .then((response) => {\r\n            //alert(\"Login Sucessful\")\r\n            dispatch(onLoginVerification(response.data))\r\n        }).catch(error=>{\r\n            //alert(\"Login Unsucessful: \"+error)\r\n        })\r\n    }\r\n}\r\n\r\nconst getAllUsersAction = (data) => {\r\n    return {\r\n        type: GET_ALL_USERS,\r\n        data\r\n    }\r\n}\r\nexport const getAllUsers = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewUser')\r\n            .then((response) => {\r\n                dispatch(getAllUsersAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\nconst deleteUserAction= (data) => {\r\n    return {\r\n        type: DELETE_USER,\r\n        data\r\n    }\r\n}\r\nexport const deleteUser = (userId) => {\r\n    console.log(userId)\r\n    return (dispatch) => {\r\n        if(window.confirm(\"Do you want to delete user with id\"+\" \"+JSON.stringify(userId)+\"?\"))\r\n        {\r\n            axios.delete(BASE_URL + 'deleteUser/'+userId)\r\n            .then((response) => {\r\n                dispatch(deleteUserAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\nconst getAllServicesAction = (data) => {\r\n    return {\r\n        type: GET_ALL_SERVICES,\r\n        data\r\n    }\r\n}\r\nexport const getAllServices = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewRequest')\r\n            .then((response) => {\r\n                dispatch(getAllServicesAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\nconst getAllMechanicAction = (data) => {\r\n    return {\r\n        type: GET_ALL_MECHANICS,\r\n        data\r\n    }\r\n}\r\nexport const getAllMechanics = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewMechanic')\r\n            .then((response) => {\r\n                dispatch(getAllMechanicAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\n\r\nconst viewRatingsAction= (data) => {\r\n    return {\r\n        type: GET_ALL_RATINGS,\r\n        data\r\n    }\r\n}\r\nexport const getAllRatings = (mechanicId) => {\r\n    console.log(mechanicId)\r\n    return (dispatch) => {\r\n       axios.get(BASE_URL + 'viewRatings/'+mechanicId)\r\n            .then((response) => {\r\n                alert(\"Average Ratings for the mechanic id\"+\" \" + JSON.stringify(mechanicId)+\" \"+\"is:\"+\" \" +JSON.stringify(response.data))\r\n                dispatch(viewRatingsAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        \r\n        \r\n                \r\n    }\r\n}\r\nconst deleteMechanicAction= (data) => {\r\n    return {\r\n        type: DELETE_MECHANIC,\r\n        data\r\n    }\r\n}\r\nexport const deleteMechanic = (mechanicId) => {\r\n    console.log(mechanicId)\r\n    return (dispatch) => {\r\n        if(window.confirm(\"Do you want to block mechanic with id\"+\" \"+JSON.stringify(mechanicId)+\"?\"))\r\n        {\r\n            axios.delete(BASE_URL + 'deleteMechanic/'+mechanicId)\r\n            .then((response) => {\r\n                dispatch(deleteMechanicAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\nconst getAllFeedbackAction = (data) => {\r\n    return {\r\n        type: GET_ALL_FEEDBACKS,\r\n        data\r\n    }\r\n}\r\nexport const getAllFeedbacks= () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewFeedback')\r\n            .then((response) => {\r\n                dispatch(getAllFeedbackAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\nconst viewFeedbackById= (data) => {\r\n    return {\r\n        type: GET_FEEDBACK_BY_ID,\r\n        data\r\n    }\r\n}\r\nexport const getFeedbackByMechanicId = (mechanicId) => {\r\n    return (dispatch) => {\r\n{\r\n            axios.get(BASE_URL + 'viewFeedback/'+mechanicId)\r\n            .then((response) => {\r\n                dispatch(viewFeedbackById(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\nconst clearStateAction = (data) => {\r\n    return {\r\n        type: CLEAR_STATE,\r\n        data\r\n    }\r\n}\r\nexport const clearState = () => {\r\n    return (dispatch) => {\r\n        dispatch(clearStateAction())\r\n    }\r\n}\r\n\r\n","F:\\reactjs\\react-orva\\src\\stores\\reducer.js",["266","267","268","269","270","271","272","273","274","275"],"import * as actionCreators from '../actions/actions'\r\n\r\nconst initialState = {\r\n      returnedMessage: 'data yet found',\r\n      userList: [],\r\n      serviceList:[],\r\n      mechanicList:[],\r\n      feedbackList:[]\r\n      \r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionCreators.GET_ALL_USERS:\r\n            let listOfUsers = action.data.userList\r\n            console.log(listOfUsers)\r\n            let resMessage=action.data.resMessage\r\n            //console.log(action.data)\r\n            console.log('List of Users')\r\n            console.log(listOfUsers)\r\n            if(listOfUsers.length == 0){\r\n                resMessage='No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: resMessage,\r\n                userList: listOfUsers\r\n            }\r\n\r\n        case actionCreators.DELETE_USER:\r\n            let listOfAfterDeletion = action.data.userList\r\n            let resMsg=action.data.resMessage\r\n            console.log(resMsg)\r\n            console.log(listOfAfterDeletion)\r\n           // console.log(messageAfterDeletion)\r\n           if(listOfAfterDeletion.length == 0){\r\n            resMsg='After Deletion, No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: resMsg,\r\n                userList: listOfAfterDeletion\r\n\r\n            }\r\n        case actionCreators.GET_ALL_SERVICES:\r\n            let listOfServices = action.data.serviceList\r\n            console.log(listOfServices)\r\n            let serMessage=action.data.resMessage\r\n            console.log(listOfServices)\r\n            if(listOfServices.length == 0){\r\n                serMessage='No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: serMessage,\r\n                serviceList: listOfServices\r\n            }\r\n        case actionCreators.GET_ALL_MECHANICS:\r\n                let listOfMechanics = action.data.mechanicList\r\n                console.log(listOfMechanics)\r\n                let mecMessage=action.data.resMessage\r\n                console.log(listOfMechanics)\r\n                if(listOfMechanics.length == 0){\r\n                    mecMessage='No Data Found'\r\n                }\r\n                return {\r\n                    returnedMessage: mecMessage,\r\n                    mechanicList: listOfMechanics\r\n                }\r\n        \r\n        case actionCreators.DELETE_MECHANIC:\r\n                    let listOfAfterDeletionMechanic = action.data.mechanicList\r\n                    let delMecMsg=action.data.resMessage\r\n                    console.log(delMecMsg)\r\n                    console.log(listOfAfterDeletionMechanic)\r\n                   // console.log(messageAfterDeletion)\r\n                   if(listOfAfterDeletionMechanic.length == 0){\r\n                    delMecMsg='After Deletion, No Data Found'\r\n                    }\r\n                    return {\r\n                        returnedMessage: delMecMsg,\r\n                        userList: listOfAfterDeletionMechanic\r\n        \r\n                    }   \r\n        case actionCreators.GET_ALL_RATINGS:\r\n                        let listOfRatings = action.data.mechanicList\r\n                        let ratingsMsg=action.data.resMessage\r\n                        console.log(ratingsMsg)\r\n                        console.log(listOfRatings)\r\n                       // console.log(messageAfterDeletion)\r\n                       if(listOfRatings.length == 0){\r\n                        ratingsMsg='After Deletion, No Data Found'\r\n                        }\r\n                        return {\r\n                            returnedMessage: ratingsMsg,\r\n                            userList: listOfRatings\r\n            \r\n                        } \r\n        // case actionCreators.GET_ALL_FEEDBACKS:\r\n        //                     let listOfFeedbacks = action.data.feedbackList\r\n        //                     console.log(listOfFeedbacks)\r\n        //                     let feedMessage=action.data.resMessage\r\n        //                     console.log(feedMessage)\r\n        //                     if(listOfFeedbacks.length == 0){\r\n        //                         feedMessage='No Data Found'\r\n        //                     }\r\n        //                     return {\r\n        //                         returnedMessage: feedMessage,\r\n        //                         feedbackList: listOfFeedbacks\r\n        //                     }\r\n        case actionCreators.LOGIN_VERIFICATION:\r\n                            let adminmsg = action.data.resMessage\r\n                            console.log(adminmsg)\r\n                            let adminSuccessMsg\r\n                            if (adminmsg == \"Login Sucessful\") {\r\n                                    //alert(\"Login sucessful\")\r\n                                    //alert(\"Login Sucessful\")\r\n                                adminSuccessMsg = 'Login Sucessful'\r\n                                }\r\n                            else {\r\n                                    //alert(\"Login Unsucessful\")\r\n                             adminSuccessMsg = \"Login UnSuccessfull\"\r\n                            }\r\n                            return {\r\n                                returnedMessage: adminmsg\r\n                            }\r\n        case actionCreators. GET_FEEDBACK_BY_ID:\r\n                                let listOfFeedbacks = action.data.feedbackList\r\n                                console.log(listOfFeedbacks)\r\n                                let feedMessage=action.data.resMessage\r\n                                console.log(feedMessage)\r\n                                if(listOfFeedbacks.length == 0){\r\n                                    feedMessage='No Data Found'\r\n                                }\r\n                                return {\r\n                                    returnedMessage: feedMessage,\r\n                                    feedbackList: listOfFeedbacks\r\n                                }                    \r\n                    \r\n            \r\n        case actionCreators.CLEAR_STATE:\r\n            return {\r\n                returnedMessage: '',\r\n                userList: [],\r\n                serviceList:[],\r\n                mechanicList:[],\r\n                feedbackList:[]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","F:\\reactjs\\react-orva\\src\\pages\\ViewRequest.js",[],"F:\\reactjs\\react-orva\\src\\pages\\ViewMechanic.js",[],"F:\\reactjs\\react-orva\\src\\pages\\ViewFeedback.js",[],"F:\\reactjs\\react-orva\\src\\components\\Home.js",["276"],"import React, { Component } from 'react';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport image1 from '../images/orba.png';\r\nimport '../style/navbar-style.css';\r\nimport ALogin from '../components/AdminLogin';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (  \r\n          <Router>\r\n          <div>\r\n<ReactBootStrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <ReactBootStrap.Navbar.Brand href=\"#home\">Home</ReactBootStrap.Navbar.Brand>\r\n  <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <ReactBootStrap.Nav className=\"mr-auto\">\r\n      <ReactBootStrap.Nav.Link href=\"#features\">Our Service</ReactBootStrap.Nav.Link>\r\n      <ReactBootStrap.Nav.Link href=\"#pricing\">Contact Us</ReactBootStrap.Nav.Link>\r\n      <ReactBootStrap.Nav.Link href=\"#pricing\">About Us</ReactBootStrap.Nav.Link>\r\n    </ReactBootStrap.Nav>\r\n    <ReactBootStrap.Nav>\r\n        <ReactBootStrap.NavDropdown title=\"Login\"  id=\"collasible-nav-dropdown\" >\r\n        <ReactBootStrap.Dropdown.Item>\r\n           <Link className=\"nav-link\" to=\"/login\"/>Admin Login \r\n        </ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-2\">Mechanic</ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-3\">User</ReactBootStrap.Dropdown.Item>\r\n       </ReactBootStrap.NavDropdown>\r\n       <ReactBootStrap.NavDropdown title=\"Register\" id=\"collasible-nav-dropdown\">\r\n       <ReactBootStrap.Dropdown.Item href=\"#/action-1\">User</ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-2\">Mechanic</ReactBootStrap.Dropdown.Item>\r\n       </ReactBootStrap.NavDropdown>\r\n        </ReactBootStrap.Nav>\r\n      </ReactBootStrap.Navbar.Collapse> \r\n    </ReactBootStrap.Navbar>\r\n    <img src={image1} alt=\"Logo\"  height='100%' width='100%' />;\r\n\r\n                \r\n            \r\n                <Switch>\r\n                    <Route exact path=\"/login\">\r\n                        <ALogin></ALogin>\r\n                    </Route>\r\n                 </Switch>\r\n           \r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","F:\\reactjs\\react-orva\\src\\components\\AdminLogin.js",[],"F:\\reactjs\\react-orva\\src\\pages\\SearchById.js",[],"F:\\reactjs\\react-orva\\src\\components\\ReactRouter.js",["277"],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\index.js",[],["278","279"],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\App.js",["280"],"import React from 'react';\r\nimport './App.css';\r\nimport AdminRouter from './components/AdminRouter';\r\nimport MainLogin from './components/MainLogin';\r\nimport MechanicRouting from './components/MechanicRouting';\r\nimport UserRouting from './components/UserRouting';\r\n\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       {/* <MainLogin  /> */}\r\n       <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={MainLogin}></Route>\r\n      <Route path=\"/admin\" component={AdminRouter}></Route>\r\n      <Route path=\"/mechanic\" component={MechanicRouting}></Route>\r\n      <Route path=\"/user\" component={UserRouting}></Route>\r\n    </Switch>\r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\serviceWorker.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\stores\\reducer.js",["281","282","283","284","285","286","287","288","289"],"import * as actionCreators from '../actions/actions'\r\nimport * as actionCreators1 from '../actions/ValidateUser'\r\nimport * as actionCreators2 from '../actions/mactions'\r\nimport * as actionCreators3 from '../actions/useractions'\r\n\r\nconst initialState = {\r\n    returnedMessage: 'data yet found',\r\n    userList: [],\r\n    serviceList: [],\r\n    mechanicList: [],\r\n    feedbackList: [],\r\n    status: 0,\r\n    Reqstatus: '',\r\n    resMessage: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionCreators1.VALIDATE_ADMIN:\r\n            let resMessage1 = action.data.message\r\n            let Reqstatus1 = action.status\r\n\r\n            console.log(action);\r\n            return {\r\n                returnedMessage: resMessage1,\r\n                status: Reqstatus1\r\n            }\r\n\r\n        case actionCreators1.VALIDATE_MECHANIC:\r\n            let resMessage2 = action.data.resMessage\r\n            let Reqstatus2 = action.status\r\n            let listAfterLogin = action.data.mechanicList\r\n            if (listAfterLogin != null) {\r\n                listAfterLogin.map((mechanic) => {\r\n\r\n                    sessionStorage.setItem(\"SessMecId\", mechanic.mechanicId);\r\n\r\n                })\r\n            }\r\n            console.log(Reqstatus2);\r\n            return {\r\n                returnedMessage: resMessage2,\r\n                status: Reqstatus2,\r\n                mechanicList: listAfterLogin\r\n            }\r\n\r\n\r\n        case actionCreators1.VALIDATE_USER:\r\n            let resMessage3 = action.data.message\r\n            let Reqstatus3 = action.status\r\n            let listAfterUserLogin = action.data.userList\r\n            console.log(listAfterUserLogin)\r\n            if (listAfterUserLogin != null) {\r\n\r\n                listAfterUserLogin.map((user) => {\r\n                    sessionStorage.setItem(\"SessUserId\", user.userId);\r\n                })\r\n            }\r\n            console.log(Reqstatus3);\r\n            return {\r\n                returnedMessage: resMessage3,\r\n                status: Reqstatus3,\r\n                userList: listAfterUserLogin\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        case actionCreators.GET_ALL_USERS:\r\n            let listOfUsers = action.data.userList\r\n            console.log(listOfUsers)\r\n            let resMessage\r\n                = action.data.resMessage\r\n            console.log('List of Users')\r\n            console.log(listOfUsers)\r\n            if (listOfUsers.length == 0) {\r\n                resMessage = 'No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: resMessage,\r\n                userList: listOfUsers\r\n            }\r\n\r\n        case actionCreators.DELETE_USER:\r\n            let listOfAfterDeletion = action.data.userList\r\n            let resMsg = action.data.resMessage\r\n            console.log(resMsg)\r\n            console.log(listOfAfterDeletion)\r\n            if (listOfAfterDeletion.length == 0) {\r\n                resMsg = 'After Deletion, No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: resMsg,\r\n                userList: listOfAfterDeletion\r\n\r\n            }\r\n        case actionCreators.GET_ALL_SERVICES:\r\n            let listOfServices = action.data.serviceList\r\n            console.log(listOfServices)\r\n            let serMessage = action.data.resMessage\r\n            console.log(listOfServices)\r\n            if (listOfServices.length == 0) {\r\n                serMessage = 'No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: serMessage,\r\n                serviceList: listOfServices\r\n            }\r\n        case actionCreators.GET_ALL_MECHANICS:\r\n            let listOfMechanics = action.data.mechanicList\r\n            console.log(listOfMechanics)\r\n            let mecMessage = action.data.resMessage\r\n            console.log(listOfMechanics)\r\n            if (listOfMechanics.length == 0) {\r\n                mecMessage = 'No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: mecMessage,\r\n                mechanicList: listOfMechanics\r\n            }\r\n\r\n        case actionCreators.DELETE_MECHANIC:\r\n            let listOfAfterDeletionMechanic = action.data.mechanicList\r\n            let delMecMsg = action.data.resMessage\r\n            console.log(delMecMsg)\r\n            console.log(listOfAfterDeletionMechanic)\r\n            if (listOfAfterDeletionMechanic.length == 0) {\r\n                delMecMsg = 'After Deletion, No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: delMecMsg,\r\n                userList: listOfAfterDeletionMechanic\r\n\r\n            }\r\n        case actionCreators.GET_ALL_RATINGS:\r\n            let listOfRatings = action.data.mechanicList\r\n            let ratingsMsg = action.data.resMessage\r\n            console.log(ratingsMsg)\r\n            console.log(listOfRatings)\r\n            if (listOfRatings.length == 0) {\r\n                ratingsMsg = 'After Deletion, No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: ratingsMsg,\r\n                userList: listOfRatings\r\n\r\n            }\r\n        case actionCreators.GET_FEEDBACK_BY_ID:\r\n            let listOfFeedbacks = action.data.feedbackList\r\n            console.log(listOfFeedbacks)\r\n            let feedMessage = action.data.resMessage\r\n            console.log(feedMessage)\r\n            if (listOfFeedbacks.length == 0) {\r\n                feedMessage = 'No Data Found'\r\n            }\r\n            return {\r\n                returnedMessage: feedMessage,\r\n                feedbackList: listOfFeedbacks\r\n            }\r\n\r\n\r\n        case actionCreators2.ADD_MECHANIC:\r\n            let messageAfterAddition = action.data.resMessage\r\n            let listAfterAddition = action.data.mechanicList\r\n            console.log(listAfterAddition);\r\n            console.log(messageAfterAddition)\r\n\r\n            return {\r\n                returnedMessage: messageAfterAddition,\r\n                mechanicList: listAfterAddition\r\n            }\r\n        case actionCreators2.GET_REQUEST:\r\n            let messageAfterRequest = action.data.resMessage\r\n            let listAfterRequest = action.data.serviceList\r\n            console.log('Addition of mechanic')\r\n            console.log(listAfterRequest)\r\n            console.log(messageAfterRequest)\r\n            return {\r\n                returnedMessage: messageAfterRequest,\r\n                serviceList: listAfterRequest\r\n            }\r\n        case actionCreators2.GET_FEEDBACK:\r\n            let messageAfterFeedback = action.data.resMessage\r\n            let listAfterFeedback = action.data.feedbackList\r\n            console.log('Addition of mechanic')\r\n            console.log(listAfterFeedback)\r\n            console.log(messageAfterFeedback)\r\n            return {\r\n                returnedMessage: messageAfterFeedback,\r\n                feedbackList: listAfterFeedback\r\n            }\r\n        case actionCreators2.GET_MECHANIC:\r\n            let messageAfterMechanic = action.data.resMessage\r\n            let listAfterMechanic = action.data.mechanicList\r\n            console.log('Addition of mechanic')\r\n            console.log(listAfterMechanic)\r\n            console.log(messageAfterMechanic)\r\n            return {\r\n                returnedMessage: messageAfterMechanic,\r\n                mechanicList: listAfterMechanic\r\n            }\r\n        case actionCreators2.UPDATE_MECHANIC:\r\n            let messageAfterUpdate = action.data.resMessage\r\n            let listAfterUpdate = action.data.mechanicList\r\n            console.log('Addition of mechanic')\r\n            console.log(listAfterUpdate)\r\n            console.log(messageAfterUpdate)\r\n            return {\r\n                returnedMessage: messageAfterUpdate,\r\n                listAfterMechanic: listAfterUpdate\r\n            }\r\n        case actionCreators3.ADD_USER:\r\n            let messageAfterAddition1 = action.data.resMessage\r\n            let listAfterAddition1 = action.data.userList\r\n            console.log('Addition of user')\r\n            console.log(messageAfterAddition1)\r\n\r\n            return {\r\n                returnedMessage: messageAfterAddition1,\r\n                userList: listAfterAddition1\r\n            }\r\n        case actionCreators3.GET_MECHANIC:\r\n            let messageAfterGetMechanic = action.data.resMessage\r\n            let listAfterGetMechanic = action.data.mechanicList\r\n            console.log(listAfterGetMechanic)\r\n            console.log(messageAfterGetMechanic)\r\n            return {\r\n                returnedMessage: messageAfterGetMechanic,\r\n                mechanicList: listAfterGetMechanic\r\n            }\r\n        case actionCreators3.GET_USER:\r\n            let messageAfterGetUSER = action.data.resMessage\r\n            let listAfterGetUSER = action.data.userList\r\n            console.log(listAfterGetUSER)\r\n            console.log(messageAfterGetUSER)\r\n            return {\r\n                returnedMessage: messageAfterGetUSER,\r\n                userList: listAfterGetUSER\r\n            }\r\n        case actionCreators3.UPDATE_USER:\r\n            let messageAfterUpdateUser = action.data.resMessage\r\n            let listAfterUpdateUser = action.data.userList\r\n            console.log(listAfterUpdateUser)\r\n            console.log(messageAfterUpdateUser)\r\n            return {\r\n                returnedMessage: messageAfterUpdateUser,\r\n                userList: listAfterUpdateUser\r\n            }\r\n        case actionCreators3.REQUEST_MECHANIC:\r\n            let messageAfterRequestMechanic = action.data.resMessage\r\n            let listService = action.data.serviceList\r\n            console.log(listService)\r\n            console.log(messageAfterRequestMechanic)\r\n            return {\r\n                returnedMessage: messageAfterRequestMechanic,\r\n                serviceList: listService\r\n            }\r\n\r\n        case actionCreators3.GIVE_FEEDBACK:\r\n            let messageFeedback = action.data.resMessage\r\n            console.log(messageFeedback)\r\n            return {\r\n                returnedMessage: messageFeedback,\r\n            }\r\n\r\n\r\n\r\n\r\n        case actionCreators.CLEAR_STATE:\r\n            return {\r\n                returnedMessage: '',\r\n                userList: [],\r\n                serviceList: [],\r\n                mechanicList: [],\r\n                feedbackList: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\AdminRouter.js",["290","291","292"],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\actions.js",["293","294","295","296","297","298"],"import axios from 'axios'\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS'\r\nexport const GET_ALL_SERVICES = 'GET_ALL_SERVICES'\r\nexport const GET_ALL_MECHANICS = 'GET_ALL_MECHANICS'\r\nexport const GET_ALL_RATINGS = 'GET_ALL_RATINGS'\r\nexport const GET_ALL_FEEDBACKS = 'GET_ALL_FEEDBACKS'\r\nexport const LOGIN_VERIFICATION ='LOGIN_VERIFICATION'\r\nexport const GET_FEEDBACK_BY_ID = 'GET_FEEDBACK_BY_ID'\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const DELETE_MECHANIC = 'DELETE_MECHANIC'\r\nexport const CLEAR_STATE = 'CLEAR_STATE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\nconst BASE_URL = 'http://localhost:8080/admin/'\r\n\r\n\r\n// const onLoginVerification = (data) => {\r\n//     return {\r\n//         type:LOGIN_VERIFICATION,\r\n//         data\r\n//     }\r\n// }\r\n\r\n// export const onLoginVerify = (credentials) => {\r\n    \r\n//     return (dispatch) => {\r\n//         axios.post(BASE_URL+'login?username='+credentials.id +'&password='+credentials.password)\r\n//         .then((response) => {\r\n//             //alert(\"Login Sucessful\")\r\n//             dispatch(onLoginVerification(response.data))\r\n//         }).catch(error=>{\r\n//             //alert(\"Login Unsucessful: \"+error)\r\n//         })\r\n// }\r\n\r\nconst getAllUsersAction = (data) => {\r\n    return {\r\n        type: GET_ALL_USERS,\r\n        data\r\n    }\r\n}\r\nexport const getAllUsers = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewUser')\r\n            .then((response) => {\r\n                dispatch(getAllUsersAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\nconst deleteUserAction= (data) => {\r\n    return {\r\n        type: DELETE_USER,\r\n        data\r\n    }\r\n}\r\nexport const deleteUser = (userId) => {\r\n    console.log(userId)\r\n    return (dispatch) => {\r\n        if(window.confirm(\"Do you want to delete user with id\"+\" \"+JSON.stringify(userId)+\"?\"))\r\n        {\r\n            axios.delete(BASE_URL + 'deleteUser/'+userId)\r\n            .then((response) => {\r\n                dispatch(deleteUserAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\nconst getAllServicesAction = (data) => {\r\n    return {\r\n        type: GET_ALL_SERVICES,\r\n        data\r\n    }\r\n}\r\nexport const getAllServices = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewRequest')\r\n            .then((response) => {\r\n                dispatch(getAllServicesAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\nconst getAllMechanicAction = (data) => {\r\n    return {\r\n        type: GET_ALL_MECHANICS,\r\n        data\r\n    }\r\n}\r\nexport const getAllMechanics = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL+'viewMechanic')\r\n            .then((response) => {\r\n                dispatch(getAllMechanicAction(response.data))\r\n                \r\n            })\r\n    }\r\n\r\n}\r\n\r\nconst viewRatingsAction= (data) => {\r\n    return {\r\n        type: GET_ALL_RATINGS,\r\n        data\r\n    }\r\n}\r\nexport const getAllRatings = (mechanicId) => {\r\n    console.log(mechanicId)\r\n    return (dispatch) => {\r\n       axios.get(BASE_URL + 'viewRatings/'+mechanicId)\r\n            .then((response) => {\r\n                alert(\"Average Ratings for the mechanic id\"+\" \" + JSON.stringify(mechanicId)+\" \"+\"is:\"+\" \" +JSON.stringify(response.data))\r\n                dispatch(viewRatingsAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        \r\n        \r\n                \r\n    }\r\n}\r\nconst deleteMechanicAction= (data) => {\r\n    return {\r\n        type: DELETE_MECHANIC,\r\n        data\r\n    }\r\n}\r\nexport const deleteMechanic = (mechanicId) => {\r\n    console.log(mechanicId)\r\n    return (dispatch) => {\r\n        if(window.confirm(\"Do you want to block mechanic with id\"+\" \"+JSON.stringify(mechanicId)+\"?\"))\r\n        {\r\n            axios.delete(BASE_URL + 'deleteMechanic/'+mechanicId)\r\n            .then((response) => {\r\n                dispatch(deleteMechanicAction(response.data))\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\n\r\nconst viewFeedbackById= (data) => {\r\n    return {\r\n        type: GET_FEEDBACK_BY_ID,\r\n        data\r\n    }\r\n}\r\nexport const getFeedbackByMechanicId = (mechanicId) => {\r\n    return (dispatch) => {\r\n{\r\n            axios.get(BASE_URL + 'viewFeedback/'+mechanicId)\r\n            .then((response) => {\r\n                \r\n                dispatch(viewFeedbackById(response.data))\r\n                \r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\nconst clearStateAction = (data) => {\r\n    return {\r\n        type: CLEAR_STATE,\r\n        data\r\n    }\r\n}\r\nexport const clearState = () => {\r\n    return (dispatch) => {\r\n        dispatch(clearStateAction())\r\n    }\r\n}\r\n\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Sidebar.js",["299"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport {SideBarData} from './SideBarData';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport '../style/Navbar.css';\r\n\r\n\r\n\r\n \r\nfunction Sidebar() {\r\n    const [sidebar,setSidebar] = useState(false);\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color: '#fff'}}>\r\n        <div className=\"navbar\">\r\n            <Link to=\"#\" className='menu-bars'>\r\n              <FaIcons.FaBars onClick={showSidebar} />  \r\n            </Link>\r\n        </div>\r\n\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n            <ul className='nav-menu-items' onClick={showSidebar}>\r\n                <li className='navbar-toggle'>\r\n                  <Link to='#' className='menu-bars'>\r\n                   <AiIcons.AiOutlineClose />\r\n                  </Link>\r\n                </li>\r\n                 {SideBarData.map((item,index) => {\r\n                   return (\r\n                       <li key= { index } className={item.cName}>\r\n                           <Link to={item.path}>\r\n                               {item.icon}\r\n                               <span>{item.title}</span>\r\n                           </Link>\r\n                       </li>\r\n\r\n                   ) ;\r\n                })}\r\n                \r\n            </ul>\r\n        </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar\r\n\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewUsers.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewRequest.js",["300"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreated from '../actions/actions'\r\n\r\nclass ViewRequest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n}\r\n    \r\n    componentDidMount() {\r\n        this.props.onGetServices()\r\n        \r\n    }\r\n    render() {\r\n        let serviceList\r\n        if(this.props.serviceList!=null){\r\n        serviceList=this.props.serviceList.map((service,index)=>{\r\n            return(\r\n                <tr key={index}>\r\n                    <th>{service.serviceId}</th>\r\n                    <td>{service.userId}</td>\r\n                    <td>{service.mechanicId}</td>\r\n                    <td>{service.serviceType}</td>\r\n                    <td>{service.location}</td>\r\n            \r\n                </tr>\r\n            )\r\n        })}\r\n        return (\r\n            <div>\r\n                 <div className=\"trn-table-div\">\r\n                        <h2>{this.props.returnedMessage}</h2>\r\n                        <table className=\"table table-info trn-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Request Id</th>\r\n                                    <th scope=\"col\">User Id</th>\r\n                                    <th scope=\"col\">Mechanic Id</th>\r\n                                    <th scope=\"col\">Service Type</th>\r\n                                    <th scope=\"col\">Location</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {serviceList}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        serviceList:state.serviceList,\r\n        returnedMessage: state.returnedMessage\r\n    }\r\n}    \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetServices: () => {\r\n          return  dispatch(actionCreated.getAllServices())\r\n        },\r\n        clearState: () => {\r\n          return  dispatch(actionCreated.clearState())\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewRequest)\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewMechanic.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\SearchById.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewFeedback.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\SideBarData.js",["301","302","303"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as CgIcons from 'react-icons/cg'\r\nimport * as GiIcons from 'react-icons/gi'\r\nimport * as VscIcons from 'react-icons/vsc'\r\nimport * as RiIcons from 'react-icons/ri'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as ImIcons from 'react-icons/im'\r\n\r\nexport const SideBarData=[\r\n    {\r\n    title:'View Users',\r\n    path:'/viewUser',\r\n    icon:<CgIcons.CgUserList   />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'View Mechanics',\r\n    path:'/viewMechanic',\r\n    icon:<GiIcons.GiMechanicGarage  />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'View Requests',\r\n    path:'/viewRequest',\r\n    icon:<ImIcons.ImUsers/>,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'View Feedbacks',\r\n    path:'/viewFeedback',\r\n    icon:<VscIcons.VscFeedback  />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Logout',\r\n    path:'/logout',\r\n    icon:<CgIcons.CgLogOff/>,\r\n    cName: 'nav-text'\r\n}\r\n];\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\NavbarData.js",["304","305","306","307","308"],"import React from 'react'\r\nimport ALogin from '../components/AdminLogin';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport image1 from '../images/orba.png';\r\nimport '../style/navbar-style.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n function NavbarData() {\r\n    return (\r\n        <div>\r\n        <ReactBootStrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <ReactBootStrap.Navbar.Brand href=\"#home\">Home</ReactBootStrap.Navbar.Brand>\r\n  <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <ReactBootStrap.Nav className=\"mr-auto\">\r\n      <ReactBootStrap.Nav.Link href=\"#features\">Our Service</ReactBootStrap.Nav.Link>\r\n      <ReactBootStrap.Nav.Link href=\"#pricing\">Contact Us</ReactBootStrap.Nav.Link>\r\n      <ReactBootStrap.Nav.Link href=\"#pricing\">About Us</ReactBootStrap.Nav.Link>\r\n    </ReactBootStrap.Nav>\r\n    <ReactBootStrap.Nav>\r\n        <ReactBootStrap.NavDropdown title=\"Login\"  id=\"collasible-nav-dropdown\" >\r\n        <ReactBootStrap.Dropdown.Item>\r\n           <Link className=\"nav-link\" to=\"/login\"/>Admin Login \r\n        </ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-2\">Mechanic</ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-3\">User</ReactBootStrap.Dropdown.Item>\r\n       </ReactBootStrap.NavDropdown>\r\n       <ReactBootStrap.NavDropdown title=\"Register\" id=\"collasible-nav-dropdown\">\r\n       <ReactBootStrap.Dropdown.Item href=\"#/action-1\">User</ReactBootStrap.Dropdown.Item>\r\n        <ReactBootStrap.Dropdown.Item href=\"#/action-2\">Mechanic</ReactBootStrap.Dropdown.Item>\r\n       </ReactBootStrap.NavDropdown>\r\n        </ReactBootStrap.Nav>\r\n      </ReactBootStrap.Navbar.Collapse> \r\n    </ReactBootStrap.Navbar>\r\n    <img src={image1} alt=\"Logo\"  height='100%' width='100%' />;\r\n\r\n                \r\n            \r\n                \r\n           \r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NavbarData","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MainLogin.js",["309","310"],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicRouting.js",["311"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Link, Route,Redirect } from 'react-router-dom';\r\nimport  ViewMechanicRequest  from '../pages/ViewMechanicRequest';\r\nimport ViewFeedback from '../pages/ViewFeedback';\r\nimport MechanicProfile from '../pages/MechanicProfile';\r\nimport Navbar from './Navbar';\r\nimport Logout from './Logout';\r\n\r\n\r\nclass MechanicRouting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const token = localStorage.getItem('token');\r\n    \r\n        console.log(\"token is\",token);\r\n        let loggedIn = true\r\n\r\n        if(token === null)\r\n        {\r\n            loggedIn = false\r\n        }\r\n\r\n        this.state = {\r\n             loggedIn\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loggedIn === false)\r\n        {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        \r\n        console.log(this.state.loggedIn);\r\n        return (\r\n            <Router>\r\n            <Navbar />\r\n            <Switch>\r\n              <Route path='/profile' component={MechanicProfile} />\r\n              <Route path='/viewrequest' component={ViewMechanicRequest} />\r\n              <Route path='/viewfeedback' component={ViewFeedback} />\r\n              {/* <Route path='/logout' component={}/> */}\r\n              <Route exact path=\"/logout\">\r\n                     <Logout/>\r\n                 </Route>\r\n            </Switch>\r\n          </Router>\r\n      \r\n        )\r\n    }\r\n}\r\n\r\nexport default MechanicRouting\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserRouting.js",["312"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Link, Route,Redirect } from 'react-router-dom';\r\nimport Givefeedback from '../pages/GiveFeedback';\r\nimport Profile from '../pages/Profile';\r\nimport SearchMechanics from '../pages/SearchMechanic';\r\nimport UserNavbar from './userNavbar';\r\nimport Logout from './Logout';\r\n\r\nclass UserRouting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const token = localStorage.getItem('token');\r\n    \r\n        console.log(\"token is\",token);\r\n        let loggedIn = true\r\n\r\n        if(token === null)\r\n        {\r\n            loggedIn = false\r\n        }\r\n\r\n        this.state = {\r\n             loggedIn\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.loggedIn === false)\r\n        {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        console.log(this.state.loggedIn);\r\n\r\n        return (\r\n            <>\r\n       <Router>\r\n    <UserNavbar/>\r\n      <Switch>\r\n      \r\n        <Route path='/profile' exact component={Profile} />\r\n        <Route path='/mechanics' component={SearchMechanics} />\r\n        <Route path='/giveFeedback' component={Givefeedback} />\r\n        <Route exact path=\"/logout\">\r\n                     <Logout/>\r\n                 </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n        </>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserRouting\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Logout.js",["313","314","315","316","317"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Link, Route , Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport class Logout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('role')\r\n\r\n       \r\n    }\r\n    componentDidMount(){\r\n        window.location.href = 'http://localhost:3000/';\r\n\r\n    }\r\n\r\n    // logout = () => {\r\n\r\n    //     // setTimeout(\"location.reload(true);\", time);\r\n    //     window.location.href = 'http://localhost:3000/';\r\n    //     // window.location.reload(false);\r\n\r\n    // }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>You have been logged out</h1>\r\n                {/* <input type=\"button\" value = \"Refresh\" onclick=\"history.go(0)\" /> */}\r\n                {/* <button onClick={this.logout.bind(this)}>Log In Again</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout\r\n\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\MechanicProfile.js",["318","319"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport \"../style/file1.css\"\r\nimport * as actionCreators from '../actions/mactions'\r\nclass MechanicProfile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.mechanicId=React.createRef();\r\n        this.mechanicName=React.createRef();\r\n        this.mechanicPhoneNumber=React.createRef();\r\n        this.mechanicServiceType=React.createRef();\r\n        this.mechanicEmailId=React.createRef();\r\n        this.mechanicPassword=React.createRef();\r\n        this.location=React.createRef();\r\n        this.state={\r\n          mechanicList:''\r\n        }\r\n      }\r\n      componentDidMount() { \r\n        this.props.onGetMechanic();\r\n        //this.changeValue();\r\n    }\r\n\r\n    changeValue=()=>{\r\n      if(this.props.mechanicList!=null){\r\n        this.props.mechanicList.map((mechanic)=>{\r\n         // sessionStorage.setItem(\"SessMecId\", mechanic.mechanicId);\r\n            console.log(mechanic.mechanicId)\r\n            document.getElementById(\"mechanicId\").value = mechanic.mechanicId;\r\n            document.getElementById(\"mechanicName\").value = mechanic.mechanicName;\r\n            document.getElementById(\"mechanicPhoneNumber\").value = mechanic.mechanicPhoneNumber;\r\n            document.getElementById(\"mechanicServiceType\").value = mechanic.mechanicServiceType;\r\n            document.getElementById(\"mechanicEmailId\").value = mechanic.mechanicEmailId;\r\n            document.getElementById(\"mechanicPassword\").value = mechanic.mechanicPassword;\r\n            document.getElementById(\"location\").value = mechanic.location;\r\n        });}\r\n\r\n    }\r\n    \r\n    updateMechanic()\r\n    {\r\n      let mechanic={\r\n        mechanicId:this.mechanicId.current.value,\r\n        mechanicName:this.mechanicName.current.value,\r\n        mechanicPhoneNumber:this.mechanicPhoneNumber.current.value,\r\n        mechanicServiceType:this.mechanicServiceType.current.value,\r\n        mechanicEmailId:this.mechanicEmailId.current.value,\r\n        mechanicPassword:this.mechanicPassword.current.value,\r\n        location:this.location.current.value\r\n      }\r\n      // alert(\"before Update\");\r\n      this.props.onUpdateMechanic(mechanic);\r\n      //alert(\"before Update\");\r\n    \r\n    }\r\n        render() {\r\n            this.changeValue();\r\n            return (\r\n              <div>\r\n              <h1>Mechanic Profile </h1>\r\n              <div className=\"col-md-5 col-md-offset-3\" id=\"Body\"  >\r\n                    <form className=\"form\" /*method=\"post\"*/  >\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5 \">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"mechanicId\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicId}\r\n                            name=\"mechanicId\"\r\n                            placeholder=\"ID\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5 \">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"12\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicName}\r\n                            name=\"mechanicName\"\r\n                            placeholder=\"Name\"\r\n                            id=\"mechanicName\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicPhoneNumber}\r\n                            name=\"mechanicPhoneNumber\"\r\n                            placeholder=\"Phone Number\"\r\n                            id=\"mechanicPhoneNumber\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicServiceType}\r\n                            name=\"mechanicServiceType\"\r\n                            placeholder=\" Service Type\"\r\n                            id=\"mechanicServiceType\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicEmailId}\r\n                            name=\"mechanicEmailId\"\r\n                            placeholder=\" Email id\"\r\n                            id=\"mechanicEmailId\"\r\n                            required/>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.mechanicPassword}\r\n                            name=\"mechanicPassword\"\r\n                            placeholder=\" Password\"\r\n                            id=\"mechanicPassword\"\r\n                            required/>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.location}\r\n                            name=\"location\"\r\n                            placeholder=\" Location\"\r\n                            id=\"location\"\r\n                            required/>\r\n                        </div>\r\n                      </div>\r\n        \r\n                      <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-5\">\r\n                          <button className=\"btn btn-primary btn-sm\" onClick={this.updateMechanic.bind(this)}> Update Profile\r\n                          </button>\r\n                          </div>\r\n                        </div>\r\n                        </form>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const mapStateToProps = (state) => {\r\n      return {\r\n          returnedMessage: state.returnedMessage,\r\n          mechanicList:state.mechanicList\r\n      }\r\n    }\r\n    \r\n    const mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        onGetMechanic:()=>{\r\n            dispatch(actionCreators.getMechanic())\r\n           // alert(\"to action\");\r\n        },\r\n        onUpdateMechanic: (mechanic) => {\r\n              dispatch(actionCreators.updateMechanic(mechanic))\r\n              //alert(\"to action\");\r\n          },\r\n          clearState: () => {\r\n            dispatch(actionCreators.clearState())\r\n    \r\n        }\r\n    \r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MechanicProfile)\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Navbar.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\mactions.js",["320","321"],"import axios from 'axios'\r\nimport { Alert } from 'bootstrap'\r\nimport MechanicProfile from '../pages/MechanicProfile'\r\nexport const ADD_MECHANIC = 'ADD_MECHANIC'\r\nexport const LOGIN_MECHANIC = 'LOGIN_MECHANIC'\r\nexport const GET_REQUEST = 'GET_REQUEST'\r\nexport const GET_FEEDBACK = 'GET_FEEDBACK'\r\nexport const GET_MECHANIC = 'GET_MECHANIC'\r\nexport const UPDATE_MECHANIC='UPDATE_MECHANIC'\r\nexport const CLEAR_STATE = 'CLEAR_STATE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\nexport const VALIDATE_USER = 'VALIDATE_USER';\r\n\r\n\r\nconst BASE_URL ='http://localhost:8080/api/mechanic/'\r\nconst registerAction = (data) => {\r\n    return {\r\n        type: ADD_MECHANIC,\r\n        data\r\n    }\r\n}\r\nexport const register = (mechanic) => {\r\n    return (dispatch) => {\r\n      //  alert(\"Register part\");\r\n        axios.post(BASE_URL+'addMechanic', mechanic)\r\n            .then((response) => {\r\n                alert(\"Register successfull\");\r\n                dispatch(registerAction(response.data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst getRequestAction = (data) => {\r\n    return {\r\n        type: GET_REQUEST,\r\n        data\r\n    }\r\n}\r\nexport const getRequest = () => {\r\n    return (dispatch) => {\r\n      let  mechanicId=sessionStorage.getItem(\"SessMecId\");\r\n      alert(mechanicId)\r\n        axios.get(BASE_URL+'viewRequest/'+mechanicId)\r\n            .then((response) => {\r\n                alert(\"View  request data\");\r\n                alert(response.data)\r\n                dispatch(getRequestAction(response.data))\r\n                \r\n            })\r\n    }\r\n}\r\nconst getFeedbackAction = (data) => {\r\n    return {\r\n        type: GET_FEEDBACK,\r\n        data\r\n    }\r\n}\r\nexport const getAllFeedbacks = () => {\r\n    return (dispatch) => {\r\n      let  mechanicId= localStorage.getItem(\"SessMecId\");\r\n      //alert(\"axios\");\r\n        axios.get(BASE_URL+'viewFeedback/'+mechanicId)\r\n            .then((response) => {\r\n                alert(\"View feedback data\");\r\n                dispatch(getFeedbackAction(response.data))               \r\n            })\r\n    }\r\n}\r\nconst getMechanicAction = (data) => {\r\n    return {\r\n        type: GET_MECHANIC,\r\n        data\r\n    }\r\n}\r\nexport const getMechanic = () => {\r\n    return (dispatch) => {\r\n        let  mechanicId= sessionStorage.getItem(\"SessMecId\");\r\n        console.log(mechanicId)\r\n      //alert(\"axios\");\r\n        axios.get(BASE_URL+'getMechanic/'+mechanicId)\r\n            .then((response) => {\r\n                //alert(\"View Mechanic Data\");\r\n                console.log(response.data)\r\n                dispatch(getMechanicAction(response.data))\r\n                \r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nconst updateMechanicAction = (data) => {\r\n    return {\r\n        type: UPDATE_MECHANIC,\r\n        data\r\n    }\r\n}\r\nexport const updateMechanic=(mechanic)=> {\r\n    return (dispatch) => {\r\n        axios.put(BASE_URL+'updateMechanic', mechanic)\r\n            .then((response) => {\r\n                alert(\"Mechanic Updated added\")\r\n                dispatch(updateMechanicAction(response.data))\r\n            })\r\n    }\r\n}\r\n// //search by domain action\r\n// const getTraineeByIdAction = (data) => {\r\n//     return {\r\n//         type: GET_TRAINEE_BY_ID,\r\n//         data\r\n//     }\r\n// }\r\n// //search by id function\r\n// export const getTraineeById = (traineeId) => {\r\n//     return (dispatch) => {\r\n//         let URL = `http://localhost:8081/trainee/view?traineeId=${traineeId}`\r\n//         axios.get(URL)\r\n//             .then((response) => {\r\n//                 dispatch(getTraineeByIdAction(response.data))\r\n//             })\r\n//     }\r\n// }\r\n\r\n//action to clear state\r\nconst clearStateAction = (data) => {\r\n    return {\r\n        type: CLEAR_STATE,\r\n        data\r\n    }\r\n}\r\n\r\n//clear state function\r\nexport const clearState = () => {\r\n    return (dispatch) => {\r\n        dispatch(clearStateAction())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicSidebarData.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\ValidateUser.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\Profile.js",["322"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n// import \"../component/file.css\"\r\nimport * as actionCreators from '../actions/useractions'\r\nclass Profile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.userId=React.createRef();\r\n        this.userName=React.createRef();\r\n        this.userPassword=React.createRef();\r\n        this.userEmailId=React.createRef();\r\n        this.userPhoneNumber=React.createRef();\r\n        this.state={\r\n          userList:''\r\n        }\r\n      }\r\n      componentDidMount() {\r\n        // this.props.clearState()\r\n        this.props.onGetUser();\r\n    }\r\n\r\n  //   componentDidUpdate() {\r\n  //     let check = this.props.returnedMessage.split(' ')\r\n  //     if (check[0] === 'Successfully') {\r\n  //         setTimeout(() => {\r\n  //             this.props.history.push('/profile')\r\n  //         }, 2000)\r\n  //     }\r\n  // }\r\n\r\n    changeValue=()=>{\r\n      if(this.props.userList!=null){\r\n        this.props.userList.map((user)=>{\r\n         // sessionStorage.setItem(\"SessMecId\", mechanic.mechanicId);\r\n            document.getElementById(\"userId\").value = user.userId;\r\n            document.getElementById(\"userName\").value = user.userName;\r\n            document.getElementById(\"userPassword\").value = user.userPassword;\r\n            document.getElementById(\"userEmailId\").value = user.userEmailId;\r\n            document.getElementById(\"userPhoneNumber\").value = user.userPhoneNumber;\r\n        \r\n        });\r\n\r\n    }}\r\n    \r\n    updateUser()\r\n    {\r\n      let mechanic={\r\n        userId:this.userId.current.value,\r\n        userName:this.userName.current.value,\r\n        userPassword:this.userPassword.current.value,\r\n        userEmailId:this.userEmailId.current.value,\r\n        userPhoneNumber:this.userPhoneNumber.current.value}\r\n      // alert(\"before Update\");\r\n      this.props.onUpdateUser(mechanic);\r\n      //alert(\"before Update\");\r\n    \r\n    }\r\n        render() {\r\n            this.changeValue();\r\n            return (\r\n              <div>\r\n              <h1>User Profile </h1>\r\n              <div className=\"col-md-5 col-md-offset-3\" id=\"Body\"  >\r\n                    <form className=\"form\" /*method=\"post\"*/  >\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5 \">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"userId\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.userId}\r\n                            name=\"userId\"\r\n                            placeholder=\"ID\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5 \">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.userName}\r\n                            name=\"userName\"\r\n                            placeholder=\"Name\"\r\n                            id=\"userName\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.userPassword}\r\n                            name=\"userPassword\"\r\n                            placeholder=\"Password\"\r\n                            id=\"userPassword\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.userEmailId}\r\n                            name=\"userEmailId\"\r\n                            placeholder=\" Email Id\"\r\n                            id=\"userEmailId\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3 row\">\r\n                        <div className=\"col-sm-5\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-sm\"\r\n                            ref={this.userPhoneNumber}\r\n                            name=\"userPhoneNumber\"\r\n                            placeholder=\" phone number\"\r\n                            id=\"userPhoneNumber\"\r\n                            required/>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-5\">\r\n                          <button className=\"btn btn-primary btn-sm\" onClick={this.updateUser.bind(this)}> Update Profile\r\n                          </button>\r\n                          </div>\r\n                        </div>\r\n                        </form>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const mapStateToProps = (state) => {\r\n      return {\r\n          returnedMessage: state.returnedMessage,\r\n          userList:state.userList\r\n      }\r\n    }\r\n    \r\n    const mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        onGetUser:()=>{\r\n            dispatch(actionCreators.getUser())\r\n           // alert(\"to action\");\r\n        },\r\n        onUpdateUser: (user) => {\r\n              dispatch(actionCreators.updateUser(user))\r\n              //alert(\"to action\");\r\n          },\r\n          clearState: () => {\r\n            dispatch(actionCreators.clearState())\r\n    \r\n        }\r\n    \r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Profile)\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\GiveFeedback.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\SearchMechanic.js",["323"],"import React, { Component, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\n//import \"../component/file.css\"\r\nimport * as actionCreators from '../actions/useractions'\r\n class SearchMechanic extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.location=React.createRef();\r\n\r\n    } \r\n    componentDidMount() {\r\n       \r\n    }\r\n    getMechanicbylocation=(e)=>{\r\n        let loc ={location:this.location.current.value}\r\n        this.props.onGetMechanic(loc);\r\n        e.preventDefault();\r\n        \r\n    }\r\n    Request(mechanicId,mechanicServiceType){\r\n        let service={\r\n            location:this.location.current.value,\r\n            mechanicId:mechanicId,\r\n            serviceType:mechanicServiceType,\r\n            userId:sessionStorage.getItem(\"SessUserId\")\r\n        }\r\n        this.props.onRequestMechanic(service);\r\n    }\r\n    render() {\r\n        let mechanicList\r\n        if(this.props.mechanicList!=null){\r\n        mechanicList=this.props.mechanicList.map((mechanic,index)=>{\r\n            return(\r\n               \r\n                    <tr key={index}>\r\n                    <th>{mechanic.mechanicId}</th>\r\n                    <td>{mechanic.mechanicName}</td>\r\n                    <td>{mechanic.mechanicPhoneNumber}</td>\r\n                    <td>{mechanic.mechanicServiceType}</td>\r\n                    <td>{mechanic.mechanicEmailId}</td>\r\n                    <td>\r\n                        <button onClick={this.Request.bind(this,mechanic.mechanicId,mechanic.mechanicServiceType)} className=\"btn btn-primary\">send request</button>\r\n                        {/* <button onClick={this.Rating.bind(this,mechanic.mechanicId)} className=\"btn btn-danger\">View Rating</button> */}\r\n                    </td>\r\n                </tr>\r\n               \r\n            )\r\n        })}\r\n        return (\r\n             <div>\r\n                 <h2>Search Mechanic</h2>\r\n                 <div className=\"col-md-5 col-md-offset-3\" id=\"Body\">\r\n           <form className=\"form\" /*method=\"post\" */>\r\n            <div className=\"mb-3 row\">\r\n                <div className=\"col-sm-5\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"location\" ref={this.location}   placeholder=\"Enter Your Location\" required />\r\n                </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                <div className=\"col-sm-5\">\r\n                    <button className=\"btn btn-primary\" onClick={this.getMechanicbylocation.bind(this)}>Search Mechanic</button>\r\n                </div>\r\n                </div>\r\n                </form>\r\n                </div>\r\n                <div className=\"trn-table-div\">\r\n                        <h2>{this.props.returnedMessage}</h2>\r\n                        <table className=\"table table-info trn-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Phone number</th>\r\n                                    <th scope=\"col\">Service Type</th>\r\n                                    <th scope=\"col\">Email Id</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {mechanicList}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mechanicList:state.mechanicList,\r\n        returnedMessage: state.returnedMessage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetMechanic: (loc) => {\r\n          return  dispatch(actionCreators.getAllmechanic(loc))\r\n        },\r\n        onRequestMechanic: (service) => {\r\n            return  dispatch(actionCreators.requestMechanic(service))\r\n          },\r\n\r\n        clearState: () => {\r\n          return  dispatch(actionCreators.clearState())\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchMechanic)\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\actions\\useractions.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\userNavbar.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserSidebarData.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\MechanicRegister.js",["324","325"],"import React, { Component } from 'react'\r\nimport \"../style/file1.css\"\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as actionCreators from '../actions/mactions'\r\n\r\nconst initialState = {\r\n  nameError: \"\",\r\n  phoneNoError: \"\",\r\n  serviceTpeError: \"\",\r\n  emailError: \"\",\r\n  passwordError: \"\",\r\n  locationError: \"\"\r\n\r\n};\r\nclass MechanicRegister extends Component {\r\n  state=initialState;\r\n  constructor(props){\r\n    super(props);\r\n    this.mechanicName=React.createRef();\r\n    this.mechanicPhoneNumber=React.createRef();\r\n    this.mechanicServiceType=React.createRef();\r\n    this.mechanicEmailId=React.createRef();\r\n    this.mechanicPassword=React.createRef();\r\n    this.location=React.createRef();\r\n  }\r\n  \r\n  handleValidate = event => {\r\n    // event.preventDefault();\r\n     const isValid = this.validate();\r\n     if (isValid) {\r\n       console.log(this.state);\r\n       // clear form\r\n       this.setState(initialState);\r\n     }\r\n   };\r\n   handleChange = event => {\r\n     const isCheckbox = event.target.type === \"checkbox\";\r\n     this.setState({\r\n       [event.target.name]: isCheckbox\r\n         ? event.target.checked\r\n         : event.target.value\r\n     });\r\n   };\r\n\r\n   validate = () => {\r\n    let nameError = \"\";\r\n    let phoneNoError = \"\";\r\n    let serviceTpeError = \"\";\r\n    let passwordError = \"\";\r\n    let emailError = \"\";\r\n    let locationError = \"\";\r\n  \r\n    if (!this.mechanicName.current.value) {\r\n      nameError = \"Name cannot be blank\";\r\n    }\r\n    if (typeof (this.mechanicPhoneNumber.current.value)!==\"undefined\") {\r\n      var pattern = new RegExp(/^[0-9\\b]+$/);\r\n    if (!pattern.test(this.mechanicPhoneNumber.current.value)) {\r\n      phoneNoError = \"Please enter only number.\";\r\n    }else if((this.mechanicPhoneNumber.current.value).length != 10){\r\n      phoneNoError = \"Phone Number Must be of 10\";\r\n    }\r\n    }\r\n    if (!this.mechanicServiceType.current.value) {\r\n      serviceTpeError = \"Service Type cannot be blank\";\r\n    }\r\n    if (typeof (this.mechanicPassword.current.value)!==\"undefined\") {\r\n      if((this.mechanicPassword.current.value).length > 8 || (this.mechanicPassword.current.value).length < 5){\r\n        passwordError = \"Password Must be in range of 5 to 8\";\r\n      }\r\n    }\r\n    if (!this.location.current.value) {\r\n      locationError = \"Location cannot be blank\";\r\n    }\r\n    if ( typeof (this.mechanicEmailId.current.value) !==\"undefined\") {\r\n      var pattern = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n      if (!pattern.test(this.mechanicEmailId.current.value)) {\r\n      emailError = \"Invalid email\";\r\n      }\r\n      }\r\n      if (!this.mechanicEmailId.current.value) {\r\n        emailError = \"email cannot be blank\";\r\n      }\r\n   \r\n    if (emailError || phoneNoError|| serviceTpeError|| passwordError|| locationError|| nameError) {\r\n      this.setState({ emailError, nameError,phoneNoError,serviceTpeError,passwordError,locationError});\r\n      return false;\r\n    }\r\n  \r\n    return true;\r\n  };\r\n  \r\n\r\n\r\n \r\n\r\n  registerMechanic=(e)=>\r\n  {\r\n    this.handleValidate();\r\n    let mechanic={\r\n      mechanicName:this.mechanicName.current.value,\r\n      mechanicPhoneNumber:this.mechanicPhoneNumber.current.value,\r\n      mechanicServiceType:this.mechanicServiceType.current.value,\r\n      mechanicEmailId:this.mechanicEmailId.current.value,\r\n      mechanicPassword:this.mechanicPassword.current.value,\r\n      location:this.location.current.value\r\n    }\r\n    // alert(\"on register\");\r\n    this.props.onRegister(mechanic);\r\n    e.preventDefault();\r\n    //alert(mechanic);\r\n  \r\n  }\r\n    render() {\r\n        return (\r\n          <div>\r\n          <h1>REGISTER</h1>\r\n            <div className=\"col-md-5 col-md-offset-3\" id=\"Body\"  >\r\n                <form className=\"form\" /*method=\"post\"*/ >\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5 \">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"12\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.mechanicName}\r\n                        name=\"mechanicName\"\r\n                        placeholder=\"Name\"\r\n                        required\r\n                      /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                      {this.state.nameError}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.mechanicPhoneNumber}\r\n                        name=\"mechanicPhoneNumber\"\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                      /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                      {this.state.phoneNoError}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.mechanicServiceType}\r\n                        name=\"mechanicServiceType\"\r\n                        placeholder=\" Service Type\"\r\n                        required\r\n                      /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                      {this.state.serviceTpeError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.mechanicEmailId}\r\n                        name=\"mechanicEmailId\"\r\n                        placeholder=\" Email id\"\r\n                        required /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.emailError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.mechanicPassword}\r\n                        name=\"mechanicPassword\"\r\n                        placeholder=\" Password\"\r\n                        required/><div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.passwordError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.location}\r\n                        name=\"location\"\r\n                        placeholder=\" Location\"\r\n                        required/><div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.locationError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-5\">\r\n                      <button className=\"btn btn-primary btn-sm\" onClick={this.registerMechanic.bind(this)}> Sign up\r\n                      </button>\r\n                      </div>\r\n                    </div>\r\n                    </form>\r\n            \r\n            <div className={(this.props.returnedMessage === '') ? '' : \"alert\"} role=\"alert\">\r\n              {this.props.returnedMessage}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      returnedMessage: state.returnedMessage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      onRegister: (mechanic) => {\r\n          dispatch(actionCreators.register(mechanic))\r\n          //alert(\"to action\");\r\n      },\r\n      clearState: () => {\r\n        dispatch(actionCreators.clearState())\r\n\r\n    }\r\n\r\n}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MechanicRegister))\r\n","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\pages\\ViewMechanicRequest.js",[],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\UserRegister.js",["326","327","328","329"],"import React, { Component } from 'react'\r\nimport \"../style/userfile.css\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport * as actionCreators from '../actions/useractions'\r\nimport MainLogin from './MainLogin'\r\n\r\n\r\nconst initialState = {\r\n  nameError: \"\",\r\n  phoneNoError:\"\",\r\n  emailError: \"\",\r\n  passwordError: \"\"\r\n  \r\n\r\n};\r\nclass UserRegister extends Component {\r\n  state=initialState;\r\n  constructor(props){\r\n    super(props);\r\n    this.userName=React.createRef();\r\n    this.userPassword=React.createRef();\r\n    this.userPhoneNumber=React.createRef();\r\n    this.userEmailId=React.createRef();\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.props.clearState()\r\n}\r\n/***************** Validation****************** */\r\n\r\nhandleValidate = event => {\r\n   //event.preventDefault();\r\n   const isValid = this.validate();\r\n   if (isValid) {\r\n     console.log(this.state);\r\n     // clear form\r\n     this.setState(initialState);\r\n   }\r\n };\r\n handleChange = event => {\r\n   //event.preventDefault();\r\n   const isCheckbox = event.target.type === \"checkbox\";\r\n   this.setState({\r\n     [event.target.name]: isCheckbox\r\n       ? event.target.checked\r\n       : event.target.value\r\n   });\r\n };\r\n validate = () => {\r\n   let nameError = \"\";\r\n   let phoneNoError = \"\";\r\n   let passwordError = \"\";\r\n   let emailError = \"\";\r\n \r\n   if (!this.userName.current.value) {\r\n     nameError = \"Name cannot be blank\";\r\n   }\r\n   if (typeof (this.userPhoneNumber.current.value)!==\"undefined\") {\r\n     var pattern = new RegExp(/^[0-9\\b]+$/);\r\n   if (!pattern.test(this.userPhoneNumber.current.value)) {\r\n     phoneNoError = \"Please enter only number.\";\r\n   }else if((this.userPhoneNumber.current.value).length != 10){\r\n     phoneNoError = \"Phone Number Must be of 10\";\r\n   }\r\n   }\r\n   if (typeof (this.userPassword.current.value)!==\"undefined\") {\r\n     if((this.userPassword.current.value).length > 8 || (this.userPassword.current.value).length < 5){\r\n       passwordError = \"Password Must be in range of 5 to 8\";\r\n     }\r\n   }\r\n   if ( typeof (this.userEmailId.current.value) !==\"undefined\") {\r\n     var pattern = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n     if (!pattern.test(this.userEmailId.current.value)) {\r\n     emailError = \"Invalid email\";\r\n     }\r\n   }\r\n \r\n   if (emailError || phoneNoError|| passwordError||  nameError) {\r\n     this.setState({ emailError, nameError,phoneNoError,passwordError});\r\n     return false;\r\n   }\r\n \r\n   return true;\r\n };\r\n\r\n/************************************ */\r\nregisterUser=(e)=>\r\n{\r\n  this.handleValidate();\r\n  let user={\r\n    userName:this.userName.current.value,\r\n    userPassword:this.userPassword.current.value,\r\n    userEmailId:this.userEmailId.current.value,\r\n    userPhoneNumber:this.userPhoneNumber.current.value,\r\n  }\r\n //alert(\"on register\");\r\n  this.props.onRegister(user); \r\n  e.preventDefault();\r\n}\r\n    render() {\r\n        return (\r\n          <div>\r\n          <h1>REGISTER</h1>\r\n            <div className=\"col-md-5 col-md-offset-3\" id=\"Body\">\r\n                 <form className=\"form\" > \r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5 \">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"12\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.userName}\r\n                        name=\"userName\"\r\n                        placeholder=\"Name\"\r\n                      /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                      {this.state.nameError}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.userPassword}\r\n                        name=\"userPassword\"\r\n                        placeholder=\" Password\"\r\n                        /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.passwordError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.userPhoneNumber}\r\n                        name=\"userPhoneNumber\"\r\n                        placeholder=\"Phone Number\"\r\n                        \r\n                      /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                      {this.state.phoneNoError}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control form-control-sm\"\r\n                        ref={this.userEmailId}\r\n                        name=\"userEmailId\"\r\n                        placeholder=\" Email id\"\r\n                        /><div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.emailError}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-5\">\r\n                      <button className=\"btn btn-primary btn-sm\" onClick={this.registerUser.bind(this)}> Sign up\r\n                      </button>\r\n                      </div>\r\n                    </div>\r\n                    </form>\r\n            \r\n            <div className={(this.props.returnedMessage === '') ? '' : \"alert\"} role=\"alert\">\r\n              {this.props.returnedMessage}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      returnedMessage: state.returnedMessage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      onRegister: (user) => {\r\n          dispatch(actionCreators.register(user))\r\n          //alert(\"to action\");\r\n      },\r\n      clearState: () => {\r\n        dispatch(actionCreators.clearState())\r\n\r\n    }\r\n\r\n}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserRegister))","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\Home.js",["330","331","332","333","334","335"],"import React, { Component } from 'react';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport image1 from '../images/orba.png';\r\nimport '../style/navbar-style.css';\r\nimport ALogin from '../components/AdminLogin';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\nimport NavbarData from './NavbarData';\r\nimport AdminLogin from '../components/AdminLogin';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (  \r\n          <Router>\r\n            \r\n              <NavbarData/>    \r\n               <Route path=\"/login\" component={AdminLogin}   />\r\n                     <Route path=\"/side\" component={Sidebar}  />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\ReactRouter.js",["336"],"E:\\Capgemini Folder\\SPRINT3\\react-orva\\react-orva\\src\\components\\AdminLogin.js",["337","338","339","340"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as actionCreators from '../actions/actions'\r\nimport Sidebar from './Sidebar';\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n\r\nclass AdminLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = React.createRef();\r\n        this.password = React.createRef();\r\n        this.state={\r\n          message:\"HOME_PAGE\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.clearState()\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //       let check = this.props.returnedMessage.split(' ')\r\n  //       if (check[0] === 'Login') {\r\n  //           setTimeout(() => {\r\n  //             this.props.history.push('/Home')\r\n  //           }, 2000)\r\n  //       }\r\n  //   }\r\n  \r\n  \r\n\r\n\r\n    login(e) {\r\n        let credentials = {\r\n            id: this.id.current.value,\r\n            password: this.password.current.value,\r\n        }\r\n        this.props.onLogin(credentials)\r\n        e.preventDefault()\r\n        \r\n    }\r\n    \r\n    render() {\r\n      if(this.state.message===\"HOME_PAGE\"){\r\n        return (\r\n            <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <form>\r\n                    <div className=\"col-sm-5 \">\r\n                    <label htmlFor=\"first-name\" className=\"col-sm-4 col-form-label\" >\r\n                      Username\r\n                    </label>\r\n                    <div className=\"col-sm-5 \">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control-sm\"\r\n                        ref={this.id}\r\n                        name=\"Id\"\r\n                        placeholder=\"Enter the username\" \r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    <div className=\"col-sm-5 \">\r\n                    <label htmlFor=\"last-name\" className=\"col-sm-4 col-form-label\">\r\n                      Password\r\n                    </label>\r\n                    <div className=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control-sm\"\r\n                        ref={this.password}\r\n                        name=\"name\"\r\n                        placeholder=\"Enter the Password\"\r\n                        required/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-5\">\r\n                    <div className=\"col\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={this.login.bind(this)}>\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                    </div>\r\n                    </form>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            \r\n            <div className={(this.props.returnedMessage === '') ? '' : \"alert\"} role=\"alert\">\r\n              {this.props.returnedMessage}\r\n            </div>\r\n            \r\n            <div>\r\n              {\r\n                this.props.returnedMessage===\"Login Sucessful\"?this.setState({message:\"Sidebar\"}):<div></div>\r\n              }\r\n            </div>\r\n\r\n            </div>  \r\n        )\r\n        }\r\n        else if(this.state.message===\"Sidebar\"){\r\n          return (\r\n          \r\n              <Sidebar />\r\n                \r\n            \r\n          )\r\n        }    \r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  //alert(\"admin: \"+state.returnedMessage)\r\n    return {\r\n        returnedMessage: state.returnedMessage\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogin: (credentials) => {\r\n            //console.log(credentials)\r\n            // dispatch(actionCreators.onLoginVerify(credentials))\r\n        },\r\n        // onUpdateTrainee: (id, newTraineeObject) => {\r\n        //     dispatch(actionCreators.updateTrainee(id, newTraineeObject))\r\n        // },\r\n        clearState: () => {\r\n            dispatch(actionCreators.clearState())\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminLogin))\r\n",{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":19},{"ruleId":"345","severity":1,"message":"349","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":12},{"ruleId":"341","replacedBy":"350"},{"ruleId":"343","replacedBy":"351"},{"ruleId":"345","severity":1,"message":"352","line":2,"column":43,"nodeType":"347","messageId":"348","endLine":2,"endColumn":47},{"ruleId":"345","severity":1,"message":"353","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":20},{"ruleId":"345","severity":1,"message":"354","line":2,"column":13,"nodeType":"347","messageId":"348","endLine":2,"endColumn":20},{"ruleId":"345","severity":1,"message":"355","line":6,"column":13,"nodeType":"347","messageId":"348","endLine":6,"endColumn":20},{"ruleId":"345","severity":1,"message":"356","line":7,"column":13,"nodeType":"347","messageId":"348","endLine":7,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":60,"column":63,"nodeType":"359","messageId":"360","endLine":60,"endColumn":64},{"ruleId":"357","severity":1,"message":"358","line":117,"column":60,"nodeType":"359","messageId":"360","endLine":117,"endColumn":61},{"ruleId":"357","severity":1,"message":"358","line":117,"column":97,"nodeType":"359","messageId":"360","endLine":117,"endColumn":98},{"ruleId":"357","severity":1,"message":"358","line":117,"column":103,"nodeType":"359","messageId":"360","endLine":117,"endColumn":104},{"ruleId":"357","severity":1,"message":"358","line":136,"column":66,"nodeType":"359","messageId":"360","endLine":136,"endColumn":67},{"ruleId":"361","severity":1,"message":"362","line":173,"column":1,"nodeType":"363","messageId":"364","endLine":180,"endColumn":10},{"ruleId":"365","severity":1,"message":"366","line":21,"column":35,"nodeType":"359","messageId":"367","endLine":21,"endColumn":37},{"ruleId":"365","severity":1,"message":"366","line":35,"column":42,"nodeType":"359","messageId":"367","endLine":35,"endColumn":44},{"ruleId":"365","severity":1,"message":"366","line":48,"column":38,"nodeType":"359","messageId":"367","endLine":48,"endColumn":40},{"ruleId":"365","severity":1,"message":"366","line":60,"column":43,"nodeType":"359","messageId":"367","endLine":60,"endColumn":45},{"ruleId":"365","severity":1,"message":"366","line":74,"column":58,"nodeType":"359","messageId":"367","endLine":74,"endColumn":60},{"ruleId":"365","severity":1,"message":"366","line":88,"column":48,"nodeType":"359","messageId":"367","endLine":88,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":112,"column":42,"nodeType":"359","messageId":"367","endLine":112,"endColumn":44},{"ruleId":"345","severity":1,"message":"368","line":119,"column":30,"nodeType":"347","messageId":"348","endLine":119,"endColumn":45},{"ruleId":"369","severity":1,"message":"370","line":124,"column":14,"nodeType":"371","messageId":"372","endLine":124,"endColumn":48,"fix":"373"},{"ruleId":"365","severity":1,"message":"366","line":129,"column":59,"nodeType":"359","messageId":"367","endLine":129,"endColumn":61},{"ruleId":"345","severity":1,"message":"374","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":17},{"ruleId":"345","severity":1,"message":"349","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":12},{"ruleId":"341","replacedBy":"375"},{"ruleId":"343","replacedBy":"376"},{"ruleId":"345","severity":1,"message":"352","line":8,"column":43,"nodeType":"347","messageId":"348","endLine":8,"endColumn":47},{"ruleId":"377","severity":1,"message":"378","line":35,"column":47,"nodeType":"379","messageId":"380","endLine":35,"endColumn":49},{"ruleId":"377","severity":1,"message":"378","line":56,"column":47,"nodeType":"379","messageId":"380","endLine":56,"endColumn":49},{"ruleId":"365","severity":1,"message":"366","line":78,"column":36,"nodeType":"359","messageId":"367","endLine":78,"endColumn":38},{"ruleId":"365","severity":1,"message":"366","line":91,"column":44,"nodeType":"359","messageId":"367","endLine":91,"endColumn":46},{"ruleId":"365","severity":1,"message":"366","line":104,"column":39,"nodeType":"359","messageId":"367","endLine":104,"endColumn":41},{"ruleId":"365","severity":1,"message":"366","line":116,"column":40,"nodeType":"359","messageId":"367","endLine":116,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":129,"column":52,"nodeType":"359","messageId":"367","endLine":129,"endColumn":54},{"ruleId":"365","severity":1,"message":"366","line":142,"column":38,"nodeType":"359","messageId":"367","endLine":142,"endColumn":40},{"ruleId":"365","severity":1,"message":"366","line":155,"column":40,"nodeType":"359","messageId":"367","endLine":155,"endColumn":42},{"ruleId":"345","severity":1,"message":"352","line":2,"column":43,"nodeType":"347","messageId":"348","endLine":2,"endColumn":47},{"ruleId":"345","severity":1,"message":"353","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":20},{"ruleId":"345","severity":1,"message":"381","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":61,"column":63,"nodeType":"359","messageId":"360","endLine":61,"endColumn":64},{"ruleId":"357","severity":1,"message":"358","line":118,"column":60,"nodeType":"359","messageId":"360","endLine":118,"endColumn":61},{"ruleId":"357","severity":1,"message":"358","line":118,"column":97,"nodeType":"359","messageId":"360","endLine":118,"endColumn":98},{"ruleId":"357","severity":1,"message":"358","line":118,"column":103,"nodeType":"359","messageId":"360","endLine":118,"endColumn":104},{"ruleId":"357","severity":1,"message":"358","line":137,"column":66,"nodeType":"359","messageId":"360","endLine":137,"endColumn":67},{"ruleId":"361","severity":1,"message":"362","line":159,"column":1,"nodeType":"363","messageId":"364","endLine":168,"endColumn":10},{"ruleId":"345","severity":1,"message":"382","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"383","severity":1,"message":"384","line":6,"column":5,"nodeType":"385","messageId":"386","endLine":8,"endColumn":2},{"ruleId":"345","severity":1,"message":"354","line":2,"column":13,"nodeType":"347","messageId":"348","endLine":2,"endColumn":20},{"ruleId":"345","severity":1,"message":"355","line":6,"column":13,"nodeType":"347","messageId":"348","endLine":6,"endColumn":20},{"ruleId":"345","severity":1,"message":"356","line":7,"column":13,"nodeType":"347","messageId":"348","endLine":7,"endColumn":20},{"ruleId":"345","severity":1,"message":"387","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"345","severity":1,"message":"374","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":17},{"ruleId":"345","severity":1,"message":"388","line":7,"column":27,"nodeType":"347","messageId":"348","endLine":7,"endColumn":33},{"ruleId":"345","severity":1,"message":"389","line":7,"column":35,"nodeType":"347","messageId":"348","endLine":7,"endColumn":41},{"ruleId":"345","severity":1,"message":"390","line":7,"column":49,"nodeType":"347","messageId":"348","endLine":7,"endColumn":54},{"ruleId":"345","severity":1,"message":"391","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":20},{"ruleId":"345","severity":1,"message":"392","line":4,"column":13,"nodeType":"347","messageId":"348","endLine":4,"endColumn":27},{"ruleId":"345","severity":1,"message":"352","line":2,"column":43,"nodeType":"347","messageId":"348","endLine":2,"endColumn":47},{"ruleId":"345","severity":1,"message":"352","line":2,"column":43,"nodeType":"347","messageId":"348","endLine":2,"endColumn":47},{"ruleId":"345","severity":1,"message":"388","line":2,"column":27,"nodeType":"347","messageId":"348","endLine":2,"endColumn":33},{"ruleId":"345","severity":1,"message":"389","line":2,"column":35,"nodeType":"347","messageId":"348","endLine":2,"endColumn":41},{"ruleId":"345","severity":1,"message":"352","line":2,"column":43,"nodeType":"347","messageId":"348","endLine":2,"endColumn":47},{"ruleId":"345","severity":1,"message":"390","line":2,"column":49,"nodeType":"347","messageId":"348","endLine":2,"endColumn":54},{"ruleId":"345","severity":1,"message":"393","line":2,"column":57,"nodeType":"347","messageId":"348","endLine":2,"endColumn":65},{"ruleId":"377","severity":1,"message":"378","line":26,"column":47,"nodeType":"379","messageId":"380","endLine":26,"endColumn":49},{"ruleId":"394","severity":1,"message":"395","line":85,"column":29,"nodeType":"396","endLine":85,"endColumn":46},{"ruleId":"345","severity":1,"message":"397","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"398","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":23},{"ruleId":"377","severity":1,"message":"378","line":33,"column":39,"nodeType":"379","messageId":"380","endLine":33,"endColumn":41},{"ruleId":"345","severity":1,"message":"399","line":1,"column":28,"nodeType":"347","messageId":"348","endLine":1,"endColumn":37},{"ruleId":"365","severity":1,"message":"400","line":61,"column":62,"nodeType":"359","messageId":"367","endLine":61,"endColumn":64},{"ruleId":"401","severity":1,"message":"402","line":77,"column":11,"nodeType":"347","messageId":"403","endLine":77,"endColumn":18},{"ruleId":"345","severity":1,"message":"393","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":18},{"ruleId":"345","severity":1,"message":"381","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":17},{"ruleId":"365","severity":1,"message":"400","line":63,"column":57,"nodeType":"359","messageId":"367","endLine":63,"endColumn":59},{"ruleId":"401","severity":1,"message":"402","line":73,"column":10,"nodeType":"347","messageId":"403","endLine":73,"endColumn":17},{"ruleId":"345","severity":1,"message":"404","line":2,"column":13,"nodeType":"347","messageId":"348","endLine":2,"endColumn":27},{"ruleId":"345","severity":1,"message":"405","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":14},{"ruleId":"345","severity":1,"message":"387","line":5,"column":8,"nodeType":"347","messageId":"348","endLine":5,"endColumn":14},{"ruleId":"345","severity":1,"message":"374","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":17},{"ruleId":"345","severity":1,"message":"389","line":7,"column":35,"nodeType":"347","messageId":"348","endLine":7,"endColumn":41},{"ruleId":"345","severity":1,"message":"352","line":7,"column":43,"nodeType":"347","messageId":"348","endLine":7,"endColumn":47},{"ruleId":"406","severity":2,"message":"407","line":39,"column":26,"nodeType":"408","endLine":39,"endColumn":36},{"ruleId":"345","severity":1,"message":"388","line":6,"column":27,"nodeType":"347","messageId":"348","endLine":6,"endColumn":33},{"ruleId":"345","severity":1,"message":"389","line":6,"column":35,"nodeType":"347","messageId":"348","endLine":6,"endColumn":41},{"ruleId":"345","severity":1,"message":"352","line":6,"column":43,"nodeType":"347","messageId":"348","endLine":6,"endColumn":47},{"ruleId":"345","severity":1,"message":"390","line":6,"column":49,"nodeType":"347","messageId":"348","endLine":6,"endColumn":54},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-unused-vars","'AdminRouter' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.",["409"],["410"],"'Link' is defined but never used.","'ViewFeedback' is defined but never used.","'FaIcons' is defined but never used.","'RiIcons' is defined but never used.","'AiIcons' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'adminSuccessMsg' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property GET_FEEDBACK_BY_ID.","MemberExpression","unexpectedWhitespace",{"range":"411","text":"412"},"'NavLink' is defined but never used.",["409"],["410"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'MainLogin' is defined but never used.","'styled' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ALogin' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","'actionCreators' is defined but never used.","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Alert' is defined but never used.","'MechanicProfile' is defined but never used.","'createRef' is defined but never used.","Expected '!==' and instead saw '!='.","no-redeclare","'pattern' is already defined.","redeclared","'ReactBootStrap' is defined but never used.","'image1' is defined but never used.","react/jsx-no-undef","'AdminLogin' is not defined.","JSXIdentifier","no-global-assign","no-unsafe-negation",[5279,5281],"."]